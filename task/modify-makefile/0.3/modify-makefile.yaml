apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: modify-makefile-task
  labels:
    app.kubernetes.io/version: "0.3"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: "OperatorBuildTools"
    tekton.dev/displayName: "operator build"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  ## description is mandatory for tekton hub, otherwise Task will not be displayed! 
  description: >-
    Operator Build Tool. This Task searches for a specific Makefile in your Ansible Operator project, 
    then edits certain lines (e.g., OPERATOR_SDK_VERSION, IMAGE_TAG_BASE, and IMG) 
    to match the provided parameter values. It is useful for automatically updating
    or customizing your Makefile before building and pushing your Operator.  
  params:
    - name: operator-sdk-version
      type: string
    - name: image-tag-base
      type: string
    - name: version
      type: string
  workspaces:
    - name: source
      description: "Workspace with the source code"
  results:
    - name: makefile-path
      description: "Absolute path to the identified Makefile"
  steps:
    - name: find-and-modify-makefile
      #image: alpine:latest
      image: mirror.gcr.io/library/alpine:latest
      script: |
        # Suche nach dem Makefile mit spezifischem Inhalt
        #MAKEFILE_PATH=$(find $(workspaces.source.path)/testdata/ansible/memcached-operator -type f -name "Makefile" -exec grep -l "VERSION ?= 0.0.1" {} + | head -n 1)
        MAKEFILE_PATH=$(find $(workspaces.source.path)/testdata/ansible/memcached-operator -type f -name "Makefile" -exec grep -l "IMAGE_TAG_BASE ?= example.com/memcached-operator" {} + | head -n 1)

        if [ -z "$MAKEFILE_PATH" ]; then
          echo "Specified Makefile not found in Ansible directory!"
          exit 1
        fi

        # Ausgabe des absoluten Pfads des gefundenen Makefiles und Speichern im Result
        echo "Identified Makefile at: $MAKEFILE_PATH"
        echo "$MAKEFILE_PATH" > $(results.makefile-path.path)

        # Passe nur das gefundene Makefile an
        sed -i "s|^OPERATOR_SDK_VERSION ?=.*|OPERATOR_SDK_VERSION ?= $(params.operator-sdk-version)|" "$MAKEFILE_PATH"
        sed -i "s|^IMAGE_TAG_BASE ?=.*|IMAGE_TAG_BASE ?= $(params.image-tag-base)|" "$MAKEFILE_PATH"
        sed -i "s|^IMG ?=.*|IMG ?= $(params.image-tag-base)memcached-operator:$(params.version)|" "$MAKEFILE_PATH"
        sed -i "s|^BUNDLE_IMG ?=.*|BUNDLE_IMG ?= $(params.image-tag-base)memcached-operator-bundle:$(params.version)|" "$MAKEFILE_PATH"

        #sed -i "s|docker build -t \${IMG} \.|docker build --privileged -t \${IMG} .|" "$MAKEFILE_PATH"

        # Gebe den Inhalt des modifizierten Makefiles aus
        echo "Modified Makefile content:"
        cat "$MAKEFILE_PATH"
